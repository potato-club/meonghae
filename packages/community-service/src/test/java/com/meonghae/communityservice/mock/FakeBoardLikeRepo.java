package com.meonghae.communityservice.mock;

import com.meonghae.communityservice.application.board.port.BoardLikeRepository;
import com.meonghae.communityservice.domain.board.Board;
import com.meonghae.communityservice.domain.board.BoardLike;

import java.awt.print.Pageable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeBoardLikeRepo implements BoardLikeRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0L);

    private final List<BoardLike> data = new ArrayList<>();
    @Override
    public BoardLike findByEmailAndBoardEntity_Id(String email, Long boardId) {
        Optional<BoardLike> findLike = data.stream().filter(like -> Objects.equals(like.getBoard().getId(), boardId) && Objects.equals(like.getEmail(), email))
                .findFirst();

        return findLike.orElse(null);
    }

    @Override
    public BoardLike save(BoardLike newLike) {
        if (newLike.getId() == null || newLike.getId() == 0) {
            BoardLike like = BoardLike.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .status(newLike.getStatus())
                    .email(newLike.getEmail())
                    .board(newLike.getBoard())
                    .build();

            data.add(like);
            return like;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), newLike.getId()));
            data.add(newLike);
            return newLike;
        }
    }
}
