package com.meonghae.communityservice.mock;

import com.meonghae.communityservice.application.review.port.ReactionRepository;
import com.meonghae.communityservice.domain.review.ReviewReaction;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeReactionRepo implements ReactionRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0L);
    private final List<ReviewReaction> data = new ArrayList<>();

    @Override
    public ReviewReaction findByEmailAndReviewEntity_Id(String email, Long reviewId) {
        return data.stream()
                .filter(data -> data.getEmail().equals(email) && data.getReview().getId().equals(reviewId))
                .findAny().orElse(null);
    }

    @Override
    public List<ReviewReaction> findByEmailAndReviewEntityIdIn(String email, List<Long> reviewIds) {
        return null;
    }

    @Override
    public ReviewReaction save(ReviewReaction reaction) {
        if (reaction.getId() == null || reaction.getId() == 0) {
            ReviewReaction saveReaction = ReviewReaction.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .email(reaction.getEmail())
                    .recommendStatus(reaction.getRecommendStatus())
                    .review(reaction.getReview())
                    .build();

            data.add(saveReaction);
            return saveReaction;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), reaction.getId()));
            data.add(reaction);
            return reaction;
        }
    }
}
